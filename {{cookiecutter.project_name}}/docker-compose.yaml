version: "3.8"
services:

  redis:
    image: redis
    ports:
      - 6379:6379

  database:
    build:
      context:
        database
      dockerfile:
        Dockerfile
    image: postgres:15-alpine
    volumes:
      - /tmp/{{ cookiecutter.postgres_database }}:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      - POSTGRES_USER={{ cookiecutter.postgres_username }}
      - POSTGRES_PASSWORD={{ cookiecutter.postgres_password }}
      - POSTGRES_DB={{ cookiecutter.postgres_database }}

  backend:
    build:
      context:
        ./ # backend dockerfile requires database to be in context
      dockerfile:
        backend/Dockerfile
    image: python/backend
    command: uvicorn backend.api:api --host 0.0.0.0
    ports:
      - 5000:5000
    depends_on:
      - database
    environment:
      - DATABASE_URL=postgresql://{{ cookiecutter.postgres_username }}:{{ cookiecutter.postgres_password }}@database:5432/{{ cookiecutter.postgres_database }}

  frontend:
    build:
      context:
        frontend
      dockerfile:
        Dockerfile
    image: node/frontend
    command: npm run start
    ports:
      - 8080:3000
    depends_on:
      - backend

  # runner:
  #   build:
  #     context:
  #       runner
  #     dockerfile:
  #       Dockerfile
  #   command: python -m runner