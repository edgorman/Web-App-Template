version: "3.8"
services:

  cache:
    image: redis
    ports:
      - 6379:6379

  database:
    image: postgres:15-alpine
    expose:
      - {{ cookiecutter.postgres_port }}
    volumes:
      - /tmp/{{ cookiecutter.postgres_database }}:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER={{ cookiecutter.postgres_username }}
      - POSTGRES_PASSWORD={{ cookiecutter.postgres_password }}
      - POSTGRES_DB={{ cookiecutter.postgres_database }}

  api:
    build:
      context:
        backend
      dockerfile:
        Dockerfile
    image: python/api
    command: uvicorn api.api:api --host 0.0.0.0 --port 5000
    ports:
      - 5000:{{ cookiecutter.fastapi_port }}
    depends_on:
      - cache
      - database
    environment:
      - DATABASE_URL=postgresql://{{ cookiecutter.postgres_username }}:{{ cookiecutter.postgres_password }}@database:{{ cookiecutter.postgres_port }}/{{ cookiecutter.postgres_database }}
      - BROKER_URL=redis://cache:6379/0
      - BACKEND_URL=redis://cache:6379/0

  worker:
    build:
      context:
        backend
      dockerfile:
        Dockerfile
    image: python/worker
    command: celery -A worker.tasks:app worker --loglevel=INFO
    depends_on:
      - api
    environment:
      - DATABASE_URL=postgresql://{{ cookiecutter.postgres_username }}:{{ cookiecutter.postgres_password }}@database:{{ cookiecutter.postgres_port }}/{{ cookiecutter.postgres_database }}
      - BROKER_URL=redis://cache:6379/0
      - BACKEND_URL=redis://cache:6379/0

  frontend:
    build:
      context:
        frontend
      dockerfile:
        Dockerfile
    image: node/frontend
    ports:
      - 80:{{ cookiecutter.frontend_port }}
